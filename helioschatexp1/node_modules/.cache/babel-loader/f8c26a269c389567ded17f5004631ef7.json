{"ast":null,"code":"import _objectSpread from \"/Users/goutham/Desktop/work/helioschatexp1/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/goutham/Desktop/work/helioschatexp1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport faker from \"faker\";\n\nfunction createFakeRow(index) {\n  return {\n    id: index,\n    avatar: faker.image.avatar(),\n    county: faker.address.county(),\n    email: faker.internet.email(),\n    title: faker.name.prefix(),\n    firstName: faker.name.firstName(),\n    lastName: faker.name.lastName(),\n    street: faker.address.streetName(),\n    zipCode: faker.address.zipCode(),\n    date: faker.date.past().toLocaleDateString(),\n    jobTitle: faker.name.jobTitle(),\n    catchPhrase: faker.company.catchPhrase(),\n    companyName: faker.company.companyName(),\n    jobArea: faker.name.jobArea(),\n    jobType: faker.name.jobType(),\n    phone: faker.phone.phoneNumber()\n  };\n}\n\nvar createChildRows = function createChildRows(count) {\n  return _toConsumableArray(Array(count).keys()).map(function (i) {\n    return createFakeRow(i);\n  });\n};\n\nexport default function createRowData(count) {\n  return _toConsumableArray(Array(count).keys()).map(function (i) {\n    var teamMembers = createChildRows(3);\n    return _objectSpread({}, createFakeRow(i), {\n      teamMembers: teamMembers\n    });\n  });\n}","map":{"version":3,"sources":["/Users/goutham/Desktop/work/helioschatexp1/src/createRowData.js"],"names":["faker","createFakeRow","index","id","avatar","image","county","address","email","internet","title","name","prefix","firstName","lastName","street","streetName","zipCode","date","past","toLocaleDateString","jobTitle","catchPhrase","company","companyName","jobArea","jobType","phone","phoneNumber","createChildRows","count","Array","keys","map","i","createRowData","teamMembers"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAO;AACLC,IAAAA,EAAE,EAAED,KADC;AAELE,IAAAA,MAAM,EAAEJ,KAAK,CAACK,KAAN,CAAYD,MAAZ,EAFH;AAGLE,IAAAA,MAAM,EAAEN,KAAK,CAACO,OAAN,CAAcD,MAAd,EAHH;AAILE,IAAAA,KAAK,EAAER,KAAK,CAACS,QAAN,CAAeD,KAAf,EAJF;AAKLE,IAAAA,KAAK,EAAEV,KAAK,CAACW,IAAN,CAAWC,MAAX,EALF;AAMLC,IAAAA,SAAS,EAAEb,KAAK,CAACW,IAAN,CAAWE,SAAX,EANN;AAOLC,IAAAA,QAAQ,EAAEd,KAAK,CAACW,IAAN,CAAWG,QAAX,EAPL;AAQLC,IAAAA,MAAM,EAAEf,KAAK,CAACO,OAAN,CAAcS,UAAd,EARH;AASLC,IAAAA,OAAO,EAAEjB,KAAK,CAACO,OAAN,CAAcU,OAAd,EATJ;AAULC,IAAAA,IAAI,EAAElB,KAAK,CAACkB,IAAN,CAAWC,IAAX,GAAkBC,kBAAlB,EAVD;AAWLC,IAAAA,QAAQ,EAAErB,KAAK,CAACW,IAAN,CAAWU,QAAX,EAXL;AAYLC,IAAAA,WAAW,EAAEtB,KAAK,CAACuB,OAAN,CAAcD,WAAd,EAZR;AAaLE,IAAAA,WAAW,EAAExB,KAAK,CAACuB,OAAN,CAAcC,WAAd,EAbR;AAcLC,IAAAA,OAAO,EAAEzB,KAAK,CAACW,IAAN,CAAWc,OAAX,EAdJ;AAeLC,IAAAA,OAAO,EAAE1B,KAAK,CAACW,IAAN,CAAWe,OAAX,EAfJ;AAgBLC,IAAAA,KAAK,EAAE3B,KAAK,CAAC2B,KAAN,CAAYC,WAAZ;AAhBF,GAAP;AAkBD;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO,mBAAIC,KAAK,CAACD,KAAD,CAAL,CAAaE,IAAb,EAAJ,EAAyBC,GAAzB,CAA6B,UAAAC,CAAC;AAAA,WAAIjC,aAAa,CAACiC,CAAD,CAAjB;AAAA,GAA9B,CAAP;AACD,CAFD;;AAGA,eAAe,SAASC,aAAT,CAAuBL,KAAvB,EAA8B;AAC3C,SAAO,mBAAIC,KAAK,CAACD,KAAD,CAAL,CAAaE,IAAb,EAAJ,EAAyBC,GAAzB,CAA6B,UAAAC,CAAC,EAAI;AACvC,QAAME,WAAW,GAAGP,eAAe,CAAC,CAAD,CAAnC;AACA,6BAAY5B,aAAa,CAACiC,CAAD,CAAzB;AAA8BE,MAAAA,WAAW,EAAXA;AAA9B;AACD,GAHM,CAAP;AAID","sourcesContent":["import faker from \"faker\";\n\nfunction createFakeRow(index) {\n  return {\n    id: index,\n    avatar: faker.image.avatar(),\n    county: faker.address.county(),\n    email: faker.internet.email(),\n    title: faker.name.prefix(),\n    firstName: faker.name.firstName(),\n    lastName: faker.name.lastName(),\n    street: faker.address.streetName(),\n    zipCode: faker.address.zipCode(),\n    date: faker.date.past().toLocaleDateString(),\n    jobTitle: faker.name.jobTitle(),\n    catchPhrase: faker.company.catchPhrase(),\n    companyName: faker.company.companyName(),\n    jobArea: faker.name.jobArea(),\n    jobType: faker.name.jobType(),\n    phone: faker.phone.phoneNumber()\n  };\n}\n\nconst createChildRows = count => {\n  return [...Array(count).keys()].map(i => createFakeRow(i));\n};\nexport default function createRowData(count) {\n  return [...Array(count).keys()].map(i => {\n    const teamMembers = createChildRows(3);\n    return { ...createFakeRow(i), teamMembers, };\n  });\n}\n"]},"metadata":{},"sourceType":"module"}