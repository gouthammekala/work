{"ast":null,"code":"import _classCallCheck from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectSpread from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/goutham/Desktop/helioschatexp/src/datagridV.js\";\nimport React, { Component } from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport CustomRowRenderer from './CustomRowRenderer'; // import { Menu } from \"react-data-grid-addons\";\n\nimport ReactDOM from 'react-dom';\nimport { Menu, Data } from \"react-data-grid-addons\";\nvar ContextMenu = Menu.ContextMenu,\n    MenuItem = Menu.MenuItem,\n    SubMenu = Menu.SubMenu,\n    ContextMenuTrigger = Menu.ContextMenuTrigger;\nvar scrolloffset = 260;\nvar defaultColumnProperties = {\n  // resizable: true,\n  frozen: true,\n  width: 120\n};\nvar columns = [{\n  key: \"id\",\n  name: \"ID\",\n  frozen: true,\n  sortDescendingFirst: true,\n  headerRenderer: React.createElement(ContextMenuTrigger, {\n    id: \"some_unique_identifier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"well\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"ID\"))\n}, {\n  key: \"title\",\n  name: \"Title\",\n  editable: true,\n  sortable: true,\n  filterable: true,\n  headerRenderer: React.createElement(ContextMenuTrigger, {\n    id: \"some_unique_identifier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"well\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"title\")),\n  resizable: true\n}, {\n  key: \"complete\",\n  name: \"Complete\",\n  editable: true,\n  sortable: true,\n  resizable: true\n}].map(function (c) {\n  return _objectSpread({}, c);\n});\nvar rows = [{\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 30\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 40\n}, {\n  id: 3,\n  title: \"Task 4\",\n  complete: 50\n}, {\n  id: 4,\n  title: \"Task 5\",\n  complete: 60\n}, {\n  id: 5,\n  title: \"Task 6\",\n  complete: 70\n}];\n\nfor (var i = 0; i < 1000000; i++) {//rows.push({ id: 2, title: \"Task 3\", complete: 60 });\n}\n\nvar datagridV =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(datagridV, _Component);\n\n  function datagridV(props) {\n    var _this;\n\n    _classCallCheck(this, datagridV);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(datagridV).call(this, props));\n    _this.state = {\n      rows: rows\n    };\n\n    _this.onGridRowsUpdated = function (_ref) {\n      var fromRow = _ref.fromRow,\n          toRow = _ref.toRow,\n          updated = _ref.updated;\n\n      _this.setState(function (state) {\n        var rows = state.rows.slice();\n\n        for (var _i = fromRow; _i <= toRow; _i++) {\n          rows[_i] = _objectSpread({}, rows[_i], updated);\n        }\n\n        return {\n          rows: rows\n        };\n      });\n    };\n\n    _this.rowGetter = _this.rowGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleGridSort = _this.handleGridSort.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ExampleContextMenu = _this.ExampleContextMenu.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(datagridV, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var height = this.divElement.clientHeight;\n      console.log('height', height);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var viewportHeight = this.divElement.grid;\n      var height = this.divElement.clientHeight;\n      console.log(viewportHeight);\n      /*\n      document.body.addEventListener('contextmenu', function (evt) {\n          // console.log(evt.target.className);\n          if (evt.target.className === 'react-grid-HeaderCell-sortable') {\n              // ContextMenuTrigger();\n              ContextMenuTrigger()\n              console.log('Hello');\n          }\n          evt.preventDefault();\n      }, true);\n      asyncRowGetter(rowIndex) {\n      let result = this.props.defaultRow;\n      if (!this.state.rows[rowIndex]) {\n        if (!this.rowStatus[rowIndex]) {\n          this.props.getRow(rowIndex).then((response) => {\n            const rows = this.state.rows.slice(0);\n            rows[rowIndex] = response;\n            this.setState({\n              rows: rows\n            });\n          });\n          this.rowStatus[rowIndex] = true;\n        }\n      } else {\n        result = this.state.rows[rowIndex];\n      }\n      return result;\n      }\n      */\n      // ReactDOM.findDOMNode(this).addEventListener('nv-event', this._handleNVEvent);\n    }\n  }, {\n    key: \"onScroll\",\n    value: function onScroll(event) {\n      //console.log('onScroll',event);\n      var result = this.state.rows;\n      var row = {\n        id: 0,\n        title: \"Goutham\",\n        complete: 20\n      };\n      var rows = this.state.rows.slice(0);\n      rows[this.state.rows.length] = row; // const rows = {...result,...row}\n      // console.log(this.state.rows.length);\n      // this.setState({rows:rows});\n\n      var scrolltop = event.scrollTop;\n      var scrollheight = event.height;\n      var offsetHeight = event.offsetHeight;\n      var windowheight = 0;\n      console.log(scrolltop, scrollheight, offsetHeight);\n      console.log('window.innerHeight', window.innerHeight, window.scrollY, document.body.offsetHeight);\n      console.log(document.body.offsetHeight, '-', window.innerHeight); //console.log(scrolltop, scrolloffset);\n\n      if (scrolltop === scrolloffset) {\n        scrolloffset = scrolloffset + 50;\n        this.setState(function (state) {\n          return {\n            rows: Data.Selectors.getRows({\n              rows: rows\n            })\n          };\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {//ReactDOM.findDOMNode(this).removeEventListener('nv-event', this._handleNVEvent);\n    }\n  }, {\n    key: \"rowGetter\",\n    value: function rowGetter(i) {\n      console.log('PP', i);\n      return this.state.rows[i];\n    }\n  }, {\n    key: \"handleGridSort\",\n    value: function handleGridSort(sortColumn, sortDirection) {\n      console.log(sortColumn, sortDirection);\n    }\n  }, {\n    key: \"ExampleContextMenu\",\n    value: function ExampleContextMenu() {\n      return React.createElement(ContextMenu, {\n        id: \"some_unique_identifier\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"ContextMenu Item 1\"), React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"ContextMenu Item 2\"), React.createElement(MenuItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"ContextMenu Item 8888\"));\n    } //i => this.state.rows[i]\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var groupedRows = Data.Selectors.getRows(this.state);\n      console.log(groupedRows);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(ReactDataGrid, {\n        ref: function ref(divElement) {\n          return _this2.divElement = divElement;\n        },\n        columns: columns,\n        rowGetter: function rowGetter(i) {\n          return groupedRows[i];\n        },\n        rowsCount: groupedRows.length,\n        minHeight: 200,\n        minWidth: 200 // minColumnWidth={50}\n        // onGridRowsUpdated={this.onGridRowsUpdated}  // totla numer of rows*35 - mimum height\n        ,\n        enableCellSelect: true,\n        onGridSort: this.handleGridSort,\n        contextMenu: this.ExampleContextMenu(),\n        onScroll: this.onScroll // rowRenderer={CustomRowRenderer}\n        // RowsContainer={ContextMenuTrigger}\n        ,\n        onColumnResize: function onColumnResize(idx, width) {\n          return console.log(\"Column \".concat(idx, \" has been resized to \").concat(width));\n        },\n        rowHeight: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return datagridV;\n}(Component);\n\nexport default datagridV;","map":{"version":3,"sources":["/Users/goutham/Desktop/helioschatexp/src/datagridV.js"],"names":["React","Component","ReactDataGrid","CustomRowRenderer","ReactDOM","Menu","Data","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","scrolloffset","defaultColumnProperties","frozen","width","columns","key","name","sortDescendingFirst","headerRenderer","editable","sortable","filterable","resizable","map","c","rows","id","title","complete","i","datagridV","props","state","onGridRowsUpdated","fromRow","toRow","updated","setState","slice","rowGetter","bind","handleGridSort","ExampleContextMenu","onScroll","height","divElement","clientHeight","console","log","viewportHeight","grid","event","result","row","length","scrolltop","scrollTop","scrollheight","offsetHeight","windowheight","window","innerHeight","scrollY","document","body","Selectors","getRows","sortColumn","sortDirection","foo","handleClick","groupedRows","idx"],"mappings":"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","sourcesContent":["\nimport React,{Component } from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport CustomRowRenderer from './CustomRowRenderer';\n// import { Menu } from \"react-data-grid-addons\";\nimport ReactDOM from 'react-dom';\n\n  import { Menu,Data } from \"react-data-grid-addons\";\n  const { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } = Menu;\n  var scrolloffset=260; \nconst defaultColumnProperties = {\n    // resizable: true,\n    frozen: true,\n    width: 120\n  };\n   \nconst columns = [\n  { key: \"id\", name: \"ID\", frozen: true,sortDescendingFirst: true,headerRenderer:<ContextMenuTrigger id=\"some_unique_identifier\">\n  <div className=\"well\">ID</div>\n</ContextMenuTrigger> },\n  { key: \"title\", name: \"Title\", editable: true,sortable: true, filterable: true, headerRenderer:<ContextMenuTrigger id=\"some_unique_identifier\">\n  <div className=\"well\">title</div>\n</ContextMenuTrigger>, resizable: true},\n  { key: \"complete\", name: \"Complete\", editable: true,sortable: true ,resizable: true,}\n].map(c => ({ \n    ...c, // ...defaultColumnProperties \n}));\n\nconst rows = [\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 30 },\n  { id: 2, title: \"Task 3\", complete: 40 },\n  { id: 3, title: \"Task 4\", complete: 50 },\n  { id: 4, title: \"Task 5\", complete: 60 },\n  { id: 5, title: \"Task 6\", complete: 70 },\n\n  \n  \n];\nfor (let i=0;i<1000000;i++) {\n  //rows.push({ id: 2, title: \"Task 3\", complete: 60 });\n}\nclass datagridV extends Component {\n  state = { rows };\n\n  onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n    this.setState(state => {\n      const rows = state.rows.slice();\n      for (let i = fromRow; i <= toRow; i++) {\n        rows[i] = { ...rows[i], ...updated };\n      }\n      return { rows };\n    });\n  };\nconstructor(props) {\n    super(props);\n    this.rowGetter = this.rowGetter.bind(this);\n    this.handleGridSort = this.handleGridSort.bind(this);\n    this.ExampleContextMenu = this.ExampleContextMenu.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n}\n\ncomponentDidUpdate() {\n  var height = this.divElement.clientHeight;\n  console.log('height',height);\n}\n\n\ncomponentDidMount() {\n  const viewportHeight= this.divElement.grid;\n\n  const height = this.divElement.clientHeight;\n  console.log(viewportHeight);\n    /*\n    document.body.addEventListener('contextmenu', function (evt) {\n        // console.log(evt.target.className);\n        if (evt.target.className === 'react-grid-HeaderCell-sortable') {\n            // ContextMenuTrigger();\n            ContextMenuTrigger()\n            console.log('Hello');\n        }\n        evt.preventDefault();\n    }, true);\n    asyncRowGetter(rowIndex) {\n    let result = this.props.defaultRow;\n    if (!this.state.rows[rowIndex]) {\n      if (!this.rowStatus[rowIndex]) {\n        this.props.getRow(rowIndex).then((response) => {\n          const rows = this.state.rows.slice(0);\n          rows[rowIndex] = response;\n          this.setState({\n            rows: rows\n          });\n        });\n        this.rowStatus[rowIndex] = true;\n      }\n    } else {\n      result = this.state.rows[rowIndex];\n    }\n    return result;\n  }\n    */\n    // ReactDOM.findDOMNode(this).addEventListener('nv-event', this._handleNVEvent);\n}\n\nonScroll(event) {\n  //console.log('onScroll',event);\n  \n  let result = this.state.rows;\n  const row = { id: 0, title: \"Goutham\", complete: 20 }\n\n  const rows = this.state.rows.slice(0);\n  rows[this.state.rows.length] = row;\n  // const rows = {...result,...row}\n  // console.log(this.state.rows.length);\n   // this.setState({rows:rows});\n   var scrolltop=event.scrollTop; \n   var scrollheight=event.height;\n   var offsetHeight = event.offsetHeight;\n   var windowheight=0;\n\nconsole.log(scrolltop,scrollheight,offsetHeight);\nconsole.log('window.innerHeight',window.innerHeight,window.scrollY,document.body.offsetHeight);\nconsole.log(document.body.offsetHeight,'-',window.innerHeight);\n//console.log(scrolltop, scrolloffset);\n   if(scrolltop === scrolloffset)  {\n     \n    scrolloffset=scrolloffset+50;\n    this.setState(state => ({\n       rows: Data.Selectors.getRows({rows:rows})\n    }));\n  }\n}\n\ncomponentWillUnmount() {\n    //ReactDOM.findDOMNode(this).removeEventListener('nv-event', this._handleNVEvent);\n}\n\nrowGetter(i) {\n    console.log('PP',i  );\n    return this.state.rows[i]\n}\n\nhandleGridSort(sortColumn, sortDirection) {\n    console.log(sortColumn, sortDirection);\n}\nExampleContextMenu() {\n  return (<ContextMenu id=\"some_unique_identifier\">\n  <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\n    ContextMenu Item 1\n  </MenuItem>\n  <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\n    ContextMenu Item 2\n  </MenuItem>\n  <MenuItem divider />\n  <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\n    ContextMenu Item 8888\n  </MenuItem>\n</ContextMenu>);\n}\n\n  //i => this.state.rows[i]\n  render() {\n    \n    const groupedRows = Data.Selectors.getRows(this.state);\n    console.log(groupedRows);\n    return (\n        <div>\n \n \n      <ReactDataGrid\n        ref={ (divElement) => this.divElement = divElement}\n        columns={columns}\n        rowGetter={i=>groupedRows[i]}\n        rowsCount={groupedRows.length}\n        minHeight={200}\n        minWidth={200}\n        // minColumnWidth={50}\n        // onGridRowsUpdated={this.onGridRowsUpdated}  // totla numer of rows*35 - mimum height\n        enableCellSelect={true}\n        onGridSort={this.handleGridSort}\n        contextMenu={\n          this.ExampleContextMenu()\n        }\n        onScroll={this.onScroll}\n        // rowRenderer={CustomRowRenderer}\n        // RowsContainer={ContextMenuTrigger}\n        onColumnResize={(idx, width) =>\n            console.log(`Column ${idx} has been resized to ${width}`)\n          }\n          rowHeight={50}\n\n      />\n      </div>\n    );\n    \n  }\n}\nexport default datagridV;\n\n\n"]},"metadata":{},"sourceType":"module"}