{"ast":null,"code":"import _classCallCheck from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectSpread from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/goutham/Desktop/helioschatexp/src/datagridV.js\";\nimport React, { Component } from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport CustomRowRenderer from './CustomRowRenderer'; // import { Menu } from \"react-data-grid-addons\";\n\nimport ReactDOM from 'react-dom';\nimport { Menu } from \"react-data-grid-addons\";\nvar ContextMenu = Menu.ContextMenu,\n    MenuItem = Menu.MenuItem,\n    SubMenu = Menu.SubMenu,\n    ContextMenuTrigger = Menu.ContextMenuTrigger;\nvar defaultColumnProperties = {\n  // resizable: true,\n  frozen: true,\n  width: 120\n};\nvar columns = [{\n  key: \"id\",\n  name: \"ID\",\n  frozen: true,\n  sortDescendingFirst: true,\n  headerRenderer: React.createElement(ContextMenuTrigger, {\n    id: \"some_unique_identifier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"well\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"ID\"))\n}, {\n  key: \"title\",\n  name: \"Title\",\n  editable: true,\n  sortable: true,\n  filterable: true,\n  headerRenderer: React.createElement(ContextMenuTrigger, {\n    id: \"some_unique_identifier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"well\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"title\")),\n  resizable: true\n}, {\n  key: \"complete\",\n  name: \"Complete\",\n  editable: true,\n  sortable: true,\n  resizable: true\n}].map(function (c) {\n  return _objectSpread({}, c);\n});\nvar rows = [{\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}, {\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}, {\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}, {\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}, {\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}];\n\nvar datagridV =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(datagridV, _Component);\n\n  function datagridV(props) {\n    var _this;\n\n    _classCallCheck(this, datagridV);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(datagridV).call(this, props));\n    _this.state = {\n      rows: rows\n    };\n\n    _this.onGridRowsUpdated = function (_ref) {\n      var fromRow = _ref.fromRow,\n          toRow = _ref.toRow,\n          updated = _ref.updated;\n\n      _this.setState(function (state) {\n        var rows = state.rows.slice();\n\n        for (var i = fromRow; i <= toRow; i++) {\n          rows[i] = _objectSpread({}, rows[i], updated);\n        }\n\n        return {\n          rows: rows\n        };\n      });\n    };\n\n    _this.rowGetter = _this.rowGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleGridSort = _this.handleGridSort.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ExampleContextMenu = _this.ExampleContextMenu.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(datagridV, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /*\n      document.body.addEventListener('contextmenu', function (evt) {\n          // console.log(evt.target.className);\n          if (evt.target.className === 'react-grid-HeaderCell-sortable') {\n              // ContextMenuTrigger();\n              ContextMenuTrigger()\n              console.log('Hello');\n          }\n          evt.preventDefault();\n      }, true);\n      asyncRowGetter(rowIndex) {\n      let result = this.props.defaultRow;\n      if (!this.state.rows[rowIndex]) {\n        if (!this.rowStatus[rowIndex]) {\n          this.props.getRow(rowIndex).then((response) => {\n            const rows = this.state.rows.slice(0);\n            rows[rowIndex] = response;\n            this.setState({\n              rows: rows\n            });\n          });\n          this.rowStatus[rowIndex] = true;\n        }\n      } else {\n        result = this.state.rows[rowIndex];\n      }\n      return result;\n      }\n      */\n      ReactDOM.findDOMNode(this).addEventListener('nv-event', this._handleNVEvent);\n    }\n  }, {\n    key: \"onScroll\",\n    value: function onScroll() {\n      console.log('onScroll');\n      var result = this.state.rows;\n      var row = [];\n      row.push({\n        id: 0,\n        title: \"Task 1\",\n        complete: 20\n      });\n      var rows = this.state.rows.slice(0);\n      rows[this.state.rows.length + 1] = row; // const rows = {...result,...row}\n\n      console.log(rows);\n      this.setState({\n        rows: rows\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ReactDOM.findDOMNode(this).removeEventListener('nv-event', this._handleNVEvent);\n    }\n  }, {\n    key: \"rowGetter\",\n    value: function rowGetter(i) {\n      /// console.log('PP',i  );\n      return this.state.rows[i];\n    }\n  }, {\n    key: \"handleGridSort\",\n    value: function handleGridSort(sortColumn, sortDirection) {\n      console.log(sortColumn, sortDirection);\n    }\n  }, {\n    key: \"ExampleContextMenu\",\n    value: function ExampleContextMenu() {\n      return React.createElement(ContextMenu, {\n        id: \"some_unique_identifier\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"ContextMenu Item 1\"), React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"ContextMenu Item 2\"), React.createElement(MenuItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"ContextMenu Item 8888\"));\n    } //i => this.state.rows[i]\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(ReactDataGrid, {\n        columns: columns,\n        rowGetter: this.rowGetter,\n        rowsCount: 12,\n        minHeight: 200,\n        minWidth: 200 // minColumnWidth={50}\n        ,\n        onGridRowsUpdated: this.onGridRowsUpdated,\n        enableCellSelect: true,\n        onGridSort: this.handleGridSort,\n        contextMenu: this.ExampleContextMenu(),\n        onScroll: this.onScroll // rowRenderer={CustomRowRenderer}\n        // RowsContainer={ContextMenuTrigger}\n        ,\n        onColumnResize: function onColumnResize(idx, width) {\n          return console.log(\"Column \".concat(idx, \" has been resized to \").concat(width));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return datagridV;\n}(Component);\n\nexport default datagridV;","map":{"version":3,"sources":["/Users/goutham/Desktop/helioschatexp/src/datagridV.js"],"names":["React","Component","ReactDataGrid","CustomRowRenderer","ReactDOM","Menu","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","defaultColumnProperties","frozen","width","columns","key","name","sortDescendingFirst","headerRenderer","editable","sortable","filterable","resizable","map","c","rows","id","title","complete","datagridV","props","state","onGridRowsUpdated","fromRow","toRow","updated","setState","slice","i","rowGetter","bind","handleGridSort","ExampleContextMenu","onScroll","findDOMNode","addEventListener","_handleNVEvent","console","log","result","row","push","length","removeEventListener","sortColumn","sortDirection","foo","handleClick","idx"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAcC,SAAd,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEE,SAASC,IAAT,QAAqB,wBAArB;IACQC,W,GAAuDD,I,CAAvDC,W;IAAaC,Q,GAA0CF,I,CAA1CE,Q;IAAUC,O,GAAgCH,I,CAAhCG,O;IAASC,kB,GAAuBJ,I,CAAvBI,kB;AAE1C,IAAMC,uBAAuB,GAAG;AAC5B;AACAC,EAAAA,MAAM,EAAE,IAFoB;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAAhC;AAMA,IAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,GAAG,EAAE,IAAP;AAAaC,EAAAA,IAAI,EAAE,IAAnB;AAAyBJ,EAAAA,MAAM,EAAE,IAAjC;AAAsCK,EAAAA,mBAAmB,EAAE,IAA3D;AAAgEC,EAAAA,cAAc,EAAC,oBAAC,kBAAD;AAAoB,IAAA,EAAE,EAAC,wBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC/E;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD+E;AAA/E,CADc,EAId;AAAEH,EAAAA,GAAG,EAAE,OAAP;AAAgBC,EAAAA,IAAI,EAAE,OAAtB;AAA+BG,EAAAA,QAAQ,EAAE,IAAzC;AAA8CC,EAAAA,QAAQ,EAAE,IAAxD;AAA8DC,EAAAA,UAAU,EAAE,IAA1E;AAAgFH,EAAAA,cAAc,EAAC,oBAAC,kBAAD;AAAoB,IAAA,EAAE,EAAC,wBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC/F;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAD+F,CAA/F;AAEqBI,EAAAA,SAAS,EAAE;AAFhC,CAJc,EAOd;AAAEP,EAAAA,GAAG,EAAE,UAAP;AAAmBC,EAAAA,IAAI,EAAE,UAAzB;AAAqCG,EAAAA,QAAQ,EAAE,IAA/C;AAAoDC,EAAAA,QAAQ,EAAE,IAA9D;AAAoEE,EAAAA,SAAS,EAAE;AAA/E,CAPc,EAQdC,GARc,CAQV,UAAAC,CAAC;AAAA,2BACAA,CADA;AAAA,CARS,CAAhB;AAYA,IAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CADW,EAEX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAFW,EAGX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAHW,EAIX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAJW,EAKX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CALW,EAMX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CANW,EAOX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAPW,EAQX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CARW,EASX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CATW,EAUX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAVW,EAWX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAXW,EAYX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAZW,EAaX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAbW,EAcX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAdW,EAeX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAfW,CAAb;;IAkBMC,S;;;;;AAYN,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AADe,UAXjBC,KAWiB,GAXT;AAAEN,MAAAA,IAAI,EAAJA;AAAF,KAWS;;AAAA,UATjBO,iBASiB,GATG,gBAAiC;AAAA,UAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,UAArBC,KAAqB,QAArBA,KAAqB;AAAA,UAAdC,OAAc,QAAdA,OAAc;;AACnD,YAAKC,QAAL,CAAc,UAAAL,KAAK,EAAI;AACrB,YAAMN,IAAI,GAAGM,KAAK,CAACN,IAAN,CAAWY,KAAX,EAAb;;AACA,aAAK,IAAIC,CAAC,GAAGL,OAAb,EAAsBK,CAAC,IAAIJ,KAA3B,EAAkCI,CAAC,EAAnC,EAAuC;AACrCb,UAAAA,IAAI,CAACa,CAAD,CAAJ,qBAAeb,IAAI,CAACa,CAAD,CAAnB,EAA2BH,OAA3B;AACD;;AACD,eAAO;AAAEV,UAAAA,IAAI,EAAJA;AAAF,SAAP;AACD,OAND;AAOD,KACgB;;AAEf,UAAKc,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKE,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBF,IAAxB,uDAA1B;AACA,UAAKG,QAAL,GAAgB,MAAKA,QAAL,CAAcH,IAAd,uDAAhB;AALe;AAMlB;;;;wCAEmB;AAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BAnC,MAAAA,QAAQ,CAACuC,WAAT,CAAqB,IAArB,EAA2BC,gBAA3B,CAA4C,UAA5C,EAAwD,KAAKC,cAA7D;AACH;;;+BAEU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAIC,MAAM,GAAG,KAAKlB,KAAL,CAAWN,IAAxB;AACA,UAAMyB,GAAG,GAAG,EAAZ;AACAA,MAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEzB,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,QAAhB;AAA0BC,QAAAA,QAAQ,EAAE;AAApC,OAAT;AACA,UAAMH,IAAI,GAAG,KAAKM,KAAL,CAAWN,IAAX,CAAgBY,KAAhB,CAAsB,CAAtB,CAAb;AACAZ,MAAAA,IAAI,CAAC,KAAKM,KAAL,CAAWN,IAAX,CAAgB2B,MAAhB,GAAuB,CAAxB,CAAJ,GAAiCF,GAAjC,CANS,CAOT;;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AACA,WAAKW,QAAL,CAAc;AAACX,QAAAA,IAAI,EAACA;AAAN,OAAd;AACD;;;2CAEsB;AACnBpB,MAAAA,QAAQ,CAACuC,WAAT,CAAqB,IAArB,EAA2BS,mBAA3B,CAA+C,UAA/C,EAA2D,KAAKP,cAAhE;AACH;;;8BAESR,C,EAAG;AACT;AACA,aAAO,KAAKP,KAAL,CAAWN,IAAX,CAAgBa,CAAhB,CAAP;AACH;;;mCAEcgB,U,EAAYC,a,EAAe;AACtCR,MAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ,EAAwBC,aAAxB;AACH;;;yCACoB;AACnB,aAAQ,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAACC,UAAAA,GAAG,EAAE;AAAN,SAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADQ,EAIR,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAACD,UAAAA,GAAG,EAAE;AAAN,SAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJQ,EAOR,oBAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPQ,EAQR,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAACD,UAAAA,GAAG,EAAE;AAAN,SAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARQ,CAAR;AAYD,K,CAEC;;;;6BACS;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGF,oBAAC,aAAD;AAEE,QAAA,OAAO,EAAE3C,OAFX;AAGE,QAAA,SAAS,EAAE,KAAKyB,SAHlB;AAIE,QAAA,SAAS,EAAE,EAJb;AAKE,QAAA,SAAS,EAAE,GALb;AAME,QAAA,QAAQ,EAAE,GANZ,CAOE;AAPF;AAQE,QAAA,iBAAiB,EAAE,KAAKP,iBAR1B;AASE,QAAA,gBAAgB,EAAE,IATpB;AAUE,QAAA,UAAU,EAAE,KAAKS,cAVnB;AAWE,QAAA,WAAW,EACT,KAAKC,kBAAL,EAZJ;AAcE,QAAA,QAAQ,EAAE,KAAKC,QAdjB,CAeE;AACA;AAhBF;AAiBE,QAAA,cAAc,EAAE,wBAACe,GAAD,EAAM7C,KAAN;AAAA,iBACZkC,OAAO,CAACC,GAAR,kBAAsBU,GAAtB,kCAAiD7C,KAAjD,EADY;AAAA,SAjBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHE,CADJ;AA6BD;;;;EA3HqBX,S;;AA6HxB,eAAe2B,SAAf","sourcesContent":["\nimport React,{Component } from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport CustomRowRenderer from './CustomRowRenderer';\n// import { Menu } from \"react-data-grid-addons\";\nimport ReactDOM from 'react-dom';\n\n  import { Menu } from \"react-data-grid-addons\";\n  const { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } = Menu;\n  \nconst defaultColumnProperties = {\n    // resizable: true,\n    frozen: true,\n    width: 120\n  };\n   \nconst columns = [\n  { key: \"id\", name: \"ID\", frozen: true,sortDescendingFirst: true,headerRenderer:<ContextMenuTrigger id=\"some_unique_identifier\">\n  <div className=\"well\">ID</div>\n</ContextMenuTrigger> },\n  { key: \"title\", name: \"Title\", editable: true,sortable: true, filterable: true, headerRenderer:<ContextMenuTrigger id=\"some_unique_identifier\">\n  <div className=\"well\">title</div>\n</ContextMenuTrigger>, resizable: true},\n  { key: \"complete\", name: \"Complete\", editable: true,sortable: true ,resizable: true,}\n].map(c => ({ \n    ...c, // ...defaultColumnProperties \n}));\n\nconst rows = [\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 },\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 },\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 },\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 },\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 }\n];\n\nclass datagridV extends Component {\n  state = { rows };\n\n  onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n    this.setState(state => {\n      const rows = state.rows.slice();\n      for (let i = fromRow; i <= toRow; i++) {\n        rows[i] = { ...rows[i], ...updated };\n      }\n      return { rows };\n    });\n  };\nconstructor(props) {\n    super(props);\n    this.rowGetter = this.rowGetter.bind(this);\n    this.handleGridSort = this.handleGridSort.bind(this);\n    this.ExampleContextMenu = this.ExampleContextMenu.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n}\n\ncomponentDidMount() {\n    /*\n    document.body.addEventListener('contextmenu', function (evt) {\n        // console.log(evt.target.className);\n        if (evt.target.className === 'react-grid-HeaderCell-sortable') {\n            // ContextMenuTrigger();\n            ContextMenuTrigger()\n            console.log('Hello');\n        }\n        evt.preventDefault();\n    }, true);\n    asyncRowGetter(rowIndex) {\n    let result = this.props.defaultRow;\n    if (!this.state.rows[rowIndex]) {\n      if (!this.rowStatus[rowIndex]) {\n        this.props.getRow(rowIndex).then((response) => {\n          const rows = this.state.rows.slice(0);\n          rows[rowIndex] = response;\n          this.setState({\n            rows: rows\n          });\n        });\n        this.rowStatus[rowIndex] = true;\n      }\n    } else {\n      result = this.state.rows[rowIndex];\n    }\n    return result;\n  }\n    */\n    ReactDOM.findDOMNode(this).addEventListener('nv-event', this._handleNVEvent);\n}\n\nonScroll() {\n  console.log('onScroll');\n  let result = this.state.rows;\n  const row = [];\n  row.push({ id: 0, title: \"Task 1\", complete: 20 });\n  const rows = this.state.rows.slice(0);\n  rows[this.state.rows.length+1] = row;\n  // const rows = {...result,...row}\n  console.log(rows);\n  this.setState({rows:rows});\n}\n\ncomponentWillUnmount() {\n    ReactDOM.findDOMNode(this).removeEventListener('nv-event', this._handleNVEvent);\n}\n\nrowGetter(i) {\n    /// console.log('PP',i  );\n    return this.state.rows[i]\n}\n\nhandleGridSort(sortColumn, sortDirection) {\n    console.log(sortColumn, sortDirection);\n}\nExampleContextMenu() {\n  return (<ContextMenu id=\"some_unique_identifier\">\n  <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\n    ContextMenu Item 1\n  </MenuItem>\n  <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\n    ContextMenu Item 2\n  </MenuItem>\n  <MenuItem divider />\n  <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\n    ContextMenu Item 8888\n  </MenuItem>\n</ContextMenu>);\n}\n\n  //i => this.state.rows[i]\n  render() {\n    return (\n        <div>\n \n \n      <ReactDataGrid\n     \n        columns={columns}\n        rowGetter={this.rowGetter}\n        rowsCount={12}\n        minHeight={200}\n        minWidth={200}\n        // minColumnWidth={50}\n        onGridRowsUpdated={this.onGridRowsUpdated}\n        enableCellSelect={true}\n        onGridSort={this.handleGridSort}\n        contextMenu={\n          this.ExampleContextMenu()\n        }\n        onScroll={this.onScroll}\n        // rowRenderer={CustomRowRenderer}\n        // RowsContainer={ContextMenuTrigger}\n        onColumnResize={(idx, width) =>\n            console.log(`Column ${idx} has been resized to ${width}`)\n          }\n\n      />\n      </div>\n    );\n    \n  }\n}\nexport default datagridV;\n\n\n"]},"metadata":{},"sourceType":"module"}