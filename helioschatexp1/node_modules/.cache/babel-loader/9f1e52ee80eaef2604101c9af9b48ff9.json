{"ast":null,"code":"import _classCallCheck from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectSpread from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/goutham/Desktop/helioschatexp/src/datagridV.js\";\nimport React, { Component } from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport CustomRowRenderer from \"./CustomRowRenderer\"; // import { Menu } from \"react-data-grid-addons\";\n\nimport ReactDOM from \"react-dom\";\nimport { Menu } from \"react-data-grid-addons\";\nvar ContextMenu = Menu.ContextMenu,\n    MenuItem = Menu.MenuItem,\n    SubMenu = Menu.SubMenu,\n    ContextMenuTrigger = Menu.ContextMenuTrigger;\nvar defaultColumnProperties = {\n  // resizable: true,\n  frozen: true,\n  width: 120\n};\nvar columns = [{\n  key: \"id\",\n  name: \"ID\",\n  frozen: true,\n  sortDescendingFirst: true,\n  headerRenderer: React.createElement(ContextMenuTrigger, {\n    id: \"some_unique_identifier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"well\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"ID\"))\n}, {\n  key: \"title\",\n  name: \"Title\",\n  editable: true,\n  sortable: true,\n  filterable: true,\n  headerRenderer: React.createElement(ContextMenuTrigger, {\n    id: \"some_unique_identifier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"well\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"title\")),\n  resizable: true\n}, {\n  key: \"complete\",\n  name: \"Complete\",\n  editable: true,\n  sortable: true,\n  resizable: true\n}].map(function (c) {\n  return _objectSpread({}, c);\n});\nvar rows = [{\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}, {\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}, {\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}, {\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}, {\n  id: 0,\n  title: \"Task 1\",\n  complete: 20\n}, {\n  id: 1,\n  title: \"Task 2\",\n  complete: 40\n}, {\n  id: 2,\n  title: \"Task 3\",\n  complete: 60\n}];\n\nvar datagridV =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(datagridV, _Component);\n\n  function datagridV(props) {\n    var _this;\n\n    _classCallCheck(this, datagridV);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(datagridV).call(this, props));\n    _this.state = {\n      rows: rows\n    };\n\n    _this.onGridRowsUpdated = function (_ref) {\n      var fromRow = _ref.fromRow,\n          toRow = _ref.toRow,\n          updated = _ref.updated;\n\n      _this.setState(function (state) {\n        var rows = state.rows.slice();\n\n        for (var i = fromRow; i <= toRow; i++) {\n          rows[i] = _objectSpread({}, rows[i], updated);\n        }\n\n        return {\n          rows: rows\n        };\n      });\n    };\n\n    _this.rowGetter = _this.rowGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleGridSort = _this.handleGridSort.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ExampleContextMenu = _this.ExampleContextMenu.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(datagridV, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /*\n      document.body.addEventListener('contextmenu', function (evt) {\n          // console.log(evt.target.className);\n          if (evt.target.className === 'react-grid-HeaderCell-sortable') {\n              // ContextMenuTrigger();\n              ContextMenuTrigger()\n              console.log('Hello');\n          }\n          evt.preventDefault();\n      }, true);\n      */\n      ReactDOM.findDOMNode(this).addEventListener(\"nv-event\", this._handleNVEvent);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ReactDOM.findDOMNode(this).removeEventListener(\"nv-event\", this._handleNVEvent);\n    }\n  }, {\n    key: \"rowGetter\",\n    value: function rowGetter(i) {\n      /// console.log('PP',i  );\n      return this.state.rows[i];\n    }\n  }, {\n    key: \"handleGridSort\",\n    value: function handleGridSort(sortColumn, sortDirection) {\n      console.log(sortColumn, sortDirection);\n    }\n  }, {\n    key: \"ExampleContextMenu\",\n    value: function ExampleContextMenu() {\n      React.createElement(ContextMenu, {\n        id: \"some_unique_identifier\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        data: {\n          foo: \"bar\"\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"ContextMenu Item 1\"), React.createElement(MenuItem, {\n        data: {\n          foo: \"bar\"\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"ContextMenu Item 2\"), React.createElement(MenuItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        data: {\n          foo: \"bar\"\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"ContextMenu Item 3\"));\n    } //i => this.state.rows[i]\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(ReactDataGrid, {\n        columns: columns,\n        rowGetter: this.rowGetter,\n        rowsCount: 12,\n        minHeight: 200,\n        minWidth: 200 // minColumnWidth={50}\n        ,\n        onGridRowsUpdated: this.onGridRowsUpdated,\n        enableCellSelect: true,\n        onGridSort: this.handleGridSort,\n        contextMenu: this.ExampleContextMenu // rowRenderer={CustomRowRenderer}\n        // RowsContainer={ContextMenuTrigger}\n        ,\n        onColumnResize: function onColumnResize(idx, width) {\n          return console.log(\"Column \".concat(idx, \" has been resized to \").concat(width));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return datagridV;\n}(Component);\n\nexport default datagridV;","map":{"version":3,"sources":["/Users/goutham/Desktop/helioschatexp/src/datagridV.js"],"names":["React","Component","ReactDataGrid","CustomRowRenderer","ReactDOM","Menu","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","defaultColumnProperties","frozen","width","columns","key","name","sortDescendingFirst","headerRenderer","editable","sortable","filterable","resizable","map","c","rows","id","title","complete","datagridV","props","state","onGridRowsUpdated","fromRow","toRow","updated","setState","slice","i","rowGetter","bind","handleGridSort","ExampleContextMenu","findDOMNode","addEventListener","_handleNVEvent","removeEventListener","sortColumn","sortDirection","console","log","foo","handleClick","idx"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,IAAT,QAAqB,wBAArB;IACQC,W,GAAuDD,I,CAAvDC,W;IAAaC,Q,GAA0CF,I,CAA1CE,Q;IAAUC,O,GAAgCH,I,CAAhCG,O;IAASC,kB,GAAuBJ,I,CAAvBI,kB;AAExC,IAAMC,uBAAuB,GAAG;AAC9B;AACAC,EAAAA,MAAM,EAAE,IAFsB;AAG9BC,EAAAA,KAAK,EAAE;AAHuB,CAAhC;AAMA,IAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,GAAG,EAAE,IADP;AAEEC,EAAAA,IAAI,EAAE,IAFR;AAGEJ,EAAAA,MAAM,EAAE,IAHV;AAIEK,EAAAA,mBAAmB,EAAE,IAJvB;AAKEC,EAAAA,cAAc,EACZ,oBAAC,kBAAD;AAAoB,IAAA,EAAE,EAAC,wBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AANJ,CADc,EAYd;AACEH,EAAAA,GAAG,EAAE,OADP;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEG,EAAAA,QAAQ,EAAE,IAHZ;AAIEC,EAAAA,QAAQ,EAAE,IAJZ;AAKEC,EAAAA,UAAU,EAAE,IALd;AAMEH,EAAAA,cAAc,EACZ,oBAAC,kBAAD;AAAoB,IAAA,EAAE,EAAC,wBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAPJ;AAWEI,EAAAA,SAAS,EAAE;AAXb,CAZc,EAyBd;AACEP,EAAAA,GAAG,EAAE,UADP;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEG,EAAAA,QAAQ,EAAE,IAHZ;AAIEC,EAAAA,QAAQ,EAAE,IAJZ;AAKEE,EAAAA,SAAS,EAAE;AALb,CAzBc,EAgCdC,GAhCc,CAgCV,UAAAC,CAAC;AAAA,2BACFA,CADE;AAAA,CAhCS,CAAhB;AAoCA,IAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CADW,EAEX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAFW,EAGX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAHW,EAIX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAJW,EAKX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CALW,EAMX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CANW,EAOX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAPW,EAQX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CARW,EASX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CATW,EAUX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAVW,EAWX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAXW,EAYX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAZW,EAaX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAbW,EAcX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAdW,EAeX;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAfW,CAAb;;IAkBMC,S;;;;;AAYJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AADiB,UAXnBC,KAWmB,GAXX;AAAEN,MAAAA,IAAI,EAAJA;AAAF,KAWW;;AAAA,UATnBO,iBASmB,GATC,gBAAiC;AAAA,UAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,UAArBC,KAAqB,QAArBA,KAAqB;AAAA,UAAdC,OAAc,QAAdA,OAAc;;AACnD,YAAKC,QAAL,CAAc,UAAAL,KAAK,EAAI;AACrB,YAAMN,IAAI,GAAGM,KAAK,CAACN,IAAN,CAAWY,KAAX,EAAb;;AACA,aAAK,IAAIC,CAAC,GAAGL,OAAb,EAAsBK,CAAC,IAAIJ,KAA3B,EAAkCI,CAAC,EAAnC,EAAuC;AACrCb,UAAAA,IAAI,CAACa,CAAD,CAAJ,qBAAeb,IAAI,CAACa,CAAD,CAAnB,EAA2BH,OAA3B;AACD;;AACD,eAAO;AAAEV,UAAAA,IAAI,EAAJA;AAAF,SAAP;AACD,OAND;AAOD,KACkB;;AAEjB,UAAKc,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKE,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBF,IAAxB,uDAA1B;AAJiB;AAKlB;;;;wCAEmB;AAClB;;;;;;;;;;;AAWAnC,MAAAA,QAAQ,CAACsC,WAAT,CAAqB,IAArB,EAA2BC,gBAA3B,CACE,UADF,EAEE,KAAKC,cAFP;AAID;;;2CAEsB;AACrBxC,MAAAA,QAAQ,CAACsC,WAAT,CAAqB,IAArB,EAA2BG,mBAA3B,CACE,UADF,EAEE,KAAKD,cAFP;AAID;;;8BAESP,C,EAAG;AACX;AACA,aAAO,KAAKP,KAAL,CAAWN,IAAX,CAAgBa,CAAhB,CAAP;AACD;;;mCAEcS,U,EAAYC,a,EAAe;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ,EAAwBC,aAAxB;AACD;;;yCACoB;AACnB,0BAAC,WAAD;AAAa,QAAA,EAAE,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAAEG,UAAAA,GAAG,EAAE;AAAP,SAAhB;AAAgC,QAAA,OAAO,EAAE,KAAKC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAIE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAAED,UAAAA,GAAG,EAAE;AAAP,SAAhB;AAAgC,QAAA,OAAO,EAAE,KAAKC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,EAOE,oBAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAAED,UAAAA,GAAG,EAAE;AAAP,SAAhB;AAAgC,QAAA,OAAO,EAAE,KAAKC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARF;AAYD,K,CAED;;;;6BACS;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAEtC,OADX;AAEE,QAAA,SAAS,EAAE,KAAKyB,SAFlB;AAGE,QAAA,SAAS,EAAE,EAHb;AAIE,QAAA,SAAS,EAAE,GAJb;AAKE,QAAA,QAAQ,EAAE,GALZ,CAME;AANF;AAOE,QAAA,iBAAiB,EAAE,KAAKP,iBAP1B;AAQE,QAAA,gBAAgB,EAAE,IARpB;AASE,QAAA,UAAU,EAAE,KAAKS,cATnB;AAUE,QAAA,WAAW,EAAE,KAAKC,kBAVpB,CAWE;AACA;AAZF;AAaE,QAAA,cAAc,EAAE,wBAACW,GAAD,EAAMxC,KAAN;AAAA,iBACdoC,OAAO,CAACC,GAAR,kBAAsBG,GAAtB,kCAAiDxC,KAAjD,EADc;AAAA,SAblB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAqBD;;;;EA1FqBX,S;;AA4FxB,eAAe2B,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport CustomRowRenderer from \"./CustomRowRenderer\";\n// import { Menu } from \"react-data-grid-addons\";\nimport ReactDOM from \"react-dom\";\n\nimport { Menu } from \"react-data-grid-addons\";\nconst { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } = Menu;\n\nconst defaultColumnProperties = {\n  // resizable: true,\n  frozen: true,\n  width: 120\n};\n\nconst columns = [\n  {\n    key: \"id\",\n    name: \"ID\",\n    frozen: true,\n    sortDescendingFirst: true,\n    headerRenderer: (\n      <ContextMenuTrigger id=\"some_unique_identifier\">\n        <div className=\"well\">ID</div>\n      </ContextMenuTrigger>\n    )\n  },\n  {\n    key: \"title\",\n    name: \"Title\",\n    editable: true,\n    sortable: true,\n    filterable: true,\n    headerRenderer: (\n      <ContextMenuTrigger id=\"some_unique_identifier\">\n        <div className=\"well\">title</div>\n      </ContextMenuTrigger>\n    ),\n    resizable: true\n  },\n  {\n    key: \"complete\",\n    name: \"Complete\",\n    editable: true,\n    sortable: true,\n    resizable: true\n  }\n].map(c => ({\n  ...c // ...defaultColumnProperties\n}));\n\nconst rows = [\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 },\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 },\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 },\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 },\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 }\n];\n\nclass datagridV extends Component {\n  state = { rows };\n\n  onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n    this.setState(state => {\n      const rows = state.rows.slice();\n      for (let i = fromRow; i <= toRow; i++) {\n        rows[i] = { ...rows[i], ...updated };\n      }\n      return { rows };\n    });\n  };\n  constructor(props) {\n    super(props);\n    this.rowGetter = this.rowGetter.bind(this);\n    this.handleGridSort = this.handleGridSort.bind(this);\n    this.ExampleContextMenu = this.ExampleContextMenu.bind(this);\n  }\n\n  componentDidMount() {\n    /*\n    document.body.addEventListener('contextmenu', function (evt) {\n        // console.log(evt.target.className);\n        if (evt.target.className === 'react-grid-HeaderCell-sortable') {\n            // ContextMenuTrigger();\n            ContextMenuTrigger()\n            console.log('Hello');\n        }\n        evt.preventDefault();\n    }, true);\n    */\n    ReactDOM.findDOMNode(this).addEventListener(\n      \"nv-event\",\n      this._handleNVEvent\n    );\n  }\n\n  componentWillUnmount() {\n    ReactDOM.findDOMNode(this).removeEventListener(\n      \"nv-event\",\n      this._handleNVEvent\n    );\n  }\n\n  rowGetter(i) {\n    /// console.log('PP',i  );\n    return this.state.rows[i];\n  }\n\n  handleGridSort(sortColumn, sortDirection) {\n    console.log(sortColumn, sortDirection);\n  }\n  ExampleContextMenu() {\n    <ContextMenu id=\"some_unique_identifier\">\n      <MenuItem data={{ foo: \"bar\" }} onClick={this.handleClick}>\n        ContextMenu Item 1\n      </MenuItem>\n      <MenuItem data={{ foo: \"bar\" }} onClick={this.handleClick}>\n        ContextMenu Item 2\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem data={{ foo: \"bar\" }} onClick={this.handleClick}>\n        ContextMenu Item 3\n      </MenuItem>\n    </ContextMenu>;\n  }\n\n  //i => this.state.rows[i]\n  render() {\n    return (\n      <div>\n        <ReactDataGrid\n          columns={columns}\n          rowGetter={this.rowGetter}\n          rowsCount={12}\n          minHeight={200}\n          minWidth={200}\n          // minColumnWidth={50}\n          onGridRowsUpdated={this.onGridRowsUpdated}\n          enableCellSelect={true}\n          onGridSort={this.handleGridSort}\n          contextMenu={this.ExampleContextMenu}\n          // rowRenderer={CustomRowRenderer}\n          // RowsContainer={ContextMenuTrigger}\n          onColumnResize={(idx, width) =>\n            console.log(`Column ${idx} has been resized to ${width}`)\n          }\n        />\n      </div>\n    );\n  }\n}\nexport default datagridV;\n"]},"metadata":{},"sourceType":"module"}