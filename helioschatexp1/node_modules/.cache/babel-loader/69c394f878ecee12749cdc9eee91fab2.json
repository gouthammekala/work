{"ast":null,"code":"import _classCallCheck from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/goutham/Desktop/helioschatexp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/goutham/Desktop/helioschatexp/src/chats/CalenderView.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport filepath from \"./file1.csv\";\n\nvar CalenderView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CalenderView, _Component);\n\n  function CalenderView(props) {\n    var _this;\n\n    _classCallCheck(this, CalenderView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalenderView).call(this, props));\n    _this.createForceLayout = _this.createForceLayout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CalenderView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createForceLayout();\n    }\n  }, {\n    key: \"createForceLayout\",\n    value: function createForceLayout() {\n      d3.csv(\"https://gist.githubusercontent.com/mbostock/354a9c93174a17eb6b80f4678e3d3ae9/raw/9d20ec96a40cc3fd5b8ddc9a306bd7397d5cfd16/dji.csv\").then(function (tdata, error) {\n        console.log(tdata);\n        var data = tdata.map(function () {\n          return d3.pairs(tdata, function (_ref, _ref2) {\n            var previous = _ref.close;\n            var date = _ref2.date,\n                close = _ref2.close;\n            return {\n              date: date,\n              value: (close - previous) / previous\n            };\n          });\n        });\n        /*\n        const years = d3\n        .nest()\n        .key(d => d.date.getUTCFullYear())\n        .entries(data)\n        .reverse();\n        const svg = d3\n        .select(DOM.svg(width, height * years.length))\n        .style(\"font\", \"10px sans-serif\")\n        .style(\"width\", \"100%\")\n        .style(\"height\", \"auto\");\n        const year = svg\n        .selectAll(\"g\")\n        .data(years)\n        .join(\"g\")\n        .attr(\n          \"transform\",\n          (d, i) => `translate(40,${height * i + cellSize * 1.5})`\n        );\n        year\n        .append(\"text\")\n        .attr(\"x\", -5)\n        .attr(\"y\", -5)\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"text-anchor\", \"end\")\n        .text(d => d.key);\n        year\n        .append(\"g\")\n        .attr(\"text-anchor\", \"end\")\n        .selectAll(\"text\")\n        .data(\n          (weekday === \"weekday\" ? d3.range(2, 7) : d3.range(7)).map(\n            i => new Date(1995, 0, i)\n          )\n        )\n        .join(\"text\")\n        .attr(\"x\", -5)\n        .attr(\"y\", d => (countDay(d) + 0.5) * cellSize)\n        .attr(\"dy\", \"0.31em\")\n        .text(formatDay);\n        year\n        .append(\"g\")\n        .selectAll(\"rect\")\n        .data(d => d.values)\n        .join(\"rect\")\n        .attr(\"width\", cellSize - 1)\n        .attr(\"height\", cellSize - 1)\n        .attr(\n          \"x\",\n          d => timeWeek.count(d3.utcYear(d.date), d.date) * cellSize + 0.5\n        )\n        .attr(\"y\", d => countDay(d.date) * cellSize + 0.5)\n        .attr(\"fill\", d => color(d.value))\n        .append(\"title\")\n        .text(d => `${formatDate(d.date)}: ${format(d.value)}`);\n        const month = year\n        .append(\"g\")\n        .selectAll(\"g\")\n        .data(d =>\n          d3.utcMonths(\n            d3.utcMonth(d.values[0].date),\n            d.values[d.values.length - 1].date\n          )\n        )\n        .join(\"g\");\n        month\n        .filter((d, i) => i)\n        .append(\"path\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"stroke-width\", 3)\n        .attr(\"d\", pathMonth);\n        month\n        .append(\"text\")\n        .attr(\n          \"x\",\n          d => timeWeek.count(d3.utcYear(d), timeWeek.ceil(d)) * cellSize + 2\n        )\n        .attr(\"y\", -5)\n        .text(formatMonth);\n        */\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CalenderView;\n}(Component);\n\nexport default CalenderView;","map":{"version":3,"sources":["/Users/goutham/Desktop/helioschatexp/src/chats/CalenderView.js"],"names":["React","Component","d3","filepath","CalenderView","props","createForceLayout","bind","csv","then","tdata","error","console","log","data","map","pairs","previous","close","date","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AAFiB;AAGlB;;;;wCACmB;AAClB,WAAKD,iBAAL;AACD;;;wCACmB;AAClBJ,MAAAA,EAAE,CAACM,GAAH,CACE,mIADF,EAEEC,IAFF,CAEO,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,YAAMI,IAAI,GAAGJ,KAAK,CAACK,GAAN,CAAU,YAAI;AAAE,iBAAOb,EAAE,CAACc,KAAH,CAASN,KAAT,EAAgB,uBAAsC;AAAA,gBAA7BO,QAA6B,QAApCC,KAAoC;AAAA,gBAAjBC,IAAiB,SAAjBA,IAAiB;AAAA,gBAAXD,KAAW,SAAXA,KAAW;AACtF,mBAAO;AAACC,cAAAA,IAAI,EAAJA,IAAD;AAAOC,cAAAA,KAAK,EAAE,CAACF,KAAK,GAAGD,QAAT,IAAqBA;AAAnC,aAAP;AACD,WAFiC,CAAP;AAG5B,SAHY,CAAb;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFH,OAjGD;AAkGD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;;;;EArHwBhB,S;;AAwH3B,eAAeG,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport filepath from \"./file1.csv\";\n\nclass CalenderView extends Component {\n  constructor(props) {\n    super(props);\n    this.createForceLayout = this.createForceLayout.bind(this);\n  }\n  componentDidMount() {\n    this.createForceLayout();\n  }\n  createForceLayout() {\n    d3.csv(\n      \"https://gist.githubusercontent.com/mbostock/354a9c93174a17eb6b80f4678e3d3ae9/raw/9d20ec96a40cc3fd5b8ddc9a306bd7397d5cfd16/dji.csv\"\n    ).then(function(tdata, error) {\n        console.log(tdata);\n        const data = tdata.map(()=>{ return d3.pairs(tdata, ({close: previous}, {date, close}) => {\n            return {date, value: (close - previous) / previous};\n          });\n        })\n        /*\n      const years = d3\n        .nest()\n        .key(d => d.date.getUTCFullYear())\n        .entries(data)\n        .reverse();\n\n      const svg = d3\n        .select(DOM.svg(width, height * years.length))\n        .style(\"font\", \"10px sans-serif\")\n        .style(\"width\", \"100%\")\n        .style(\"height\", \"auto\");\n\n      const year = svg\n        .selectAll(\"g\")\n        .data(years)\n        .join(\"g\")\n        .attr(\n          \"transform\",\n          (d, i) => `translate(40,${height * i + cellSize * 1.5})`\n        );\n\n      year\n        .append(\"text\")\n        .attr(\"x\", -5)\n        .attr(\"y\", -5)\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"text-anchor\", \"end\")\n        .text(d => d.key);\n\n      year\n        .append(\"g\")\n        .attr(\"text-anchor\", \"end\")\n        .selectAll(\"text\")\n        .data(\n          (weekday === \"weekday\" ? d3.range(2, 7) : d3.range(7)).map(\n            i => new Date(1995, 0, i)\n          )\n        )\n        .join(\"text\")\n        .attr(\"x\", -5)\n        .attr(\"y\", d => (countDay(d) + 0.5) * cellSize)\n        .attr(\"dy\", \"0.31em\")\n        .text(formatDay);\n\n      year\n        .append(\"g\")\n        .selectAll(\"rect\")\n        .data(d => d.values)\n        .join(\"rect\")\n        .attr(\"width\", cellSize - 1)\n        .attr(\"height\", cellSize - 1)\n        .attr(\n          \"x\",\n          d => timeWeek.count(d3.utcYear(d.date), d.date) * cellSize + 0.5\n        )\n        .attr(\"y\", d => countDay(d.date) * cellSize + 0.5)\n        .attr(\"fill\", d => color(d.value))\n        .append(\"title\")\n        .text(d => `${formatDate(d.date)}: ${format(d.value)}`);\n\n      const month = year\n        .append(\"g\")\n        .selectAll(\"g\")\n        .data(d =>\n          d3.utcMonths(\n            d3.utcMonth(d.values[0].date),\n            d.values[d.values.length - 1].date\n          )\n        )\n        .join(\"g\");\n\n      month\n        .filter((d, i) => i)\n        .append(\"path\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"stroke-width\", 3)\n        .attr(\"d\", pathMonth);\n\n      month\n        .append(\"text\")\n        .attr(\n          \"x\",\n          d => timeWeek.count(d3.utcYear(d), timeWeek.ceil(d)) * cellSize + 2\n        )\n        .attr(\"y\", -5)\n        .text(formatMonth);\n        */\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div id=\"chart-area\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CalenderView;\n"]},"metadata":{},"sourceType":"module"}